# to install, include 
#   source PATH/TO/.environment
# in your .zhrc


ZSH_THEME="flazz"

runtestsdiff() {
  MODIFIED="$(git --no-pager diff --name-only master)"
  DIFFERENT="$(echo $MODIFIED | awk 'match($1, "^\.py")' | tr '\n' ' ')"  
  eval "py.test -n0 $DIFFERENT"
}

runtestsmodified() {
  py.test -n0 $(git status --porcelain */tests | awk 'match($1, "M"){print $2}')
}

# DATABASE ALIASES
# list all current dbs
alias listdb="psql -c 'select datname from pg_database where datistemplate=false;'"
  
# copy a db, useful for testing PRs locally that involve migrations
# this is super useful for pulling down and testing PRs locally that may involve migrations without having to re-pull data down from champagne later when you are done testing the PR
# usage: copydb (current db name) (new db name) 
# copydb mats_db testing_pr_3123
copydb() {
  createdb -O $USERNAME -T $1 $2
}
  
# sets current active db, tricky part is it is only for that terminal so if you have multiple open it can get fun
setdb() {
  export DATABASE_URL=postgresql://$USERNAME@localhost:5432/$1
}
  
# which db is currently set as my active db
whichdb() {
  echo $DATABASE_URL
}

### PYTHON

start_python_project() {
  if [ ! $1 ]; then
    echo 'specify project name'
    return
  fi

  PROJECT_NAME=$1
  mkdir $PROJECT_NAME
  cd $PROJECT_NAME

  git init
  touch .gitignore
  echo "venv/*" > .gitignore

  virtualenv venv
  source venv/bin/activate
}

### AWS

aws_download_bucket() {
  if [ ! $1 ]; then
    echo 'needs download bucket argument'
    return
  fi
  BUCKET=$1 && mkdir $BUCKET && aws s3 sync s3://$BUCKET $BUCKET
}
